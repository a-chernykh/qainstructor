ruby:
  build: ruby

test-runner:
  build: test-runner

faye:
  build: faye

postgres:
  build: postgres
  env_file:
    - ./env/common.env

redis:
  image: redis

selenium-server:
  image: selenium/standalone-firefox

sample-app:
  build: sample-app

nginx:
  build: nginx
  env_file:
    - ./env/common.env
  links:
    - rails
    - sample-app
    - faye
  ports:
    - "80:80"

engine:
  build: engine
  env_file:
    - ./env/common.env
  volumes:
    - bundle:/bundle

rails:
  env_file:
    - ./env/common.env
  volumes:
    - bundle:/bundle
  links:
    - postgres
    - redis

sidekiq:
  build: sidekiq
  env_file:
    - ./env/common.env
  links:
    - faye
    - postgres
    - redis
    - selenium-server
  # sidekiq container should be able to start docker containers using host docker.sock file
  # also, it's important that job files inside container should share the host dir, otherwise
  # volumes won't work
  volumes:
    - bundle:/bundle
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/local/bin/docker:/usr/local/bin/docker
