version: '2'
services:
  faye:
    extends:
      file: docker-compose.common.yml
      service: service
    build: faye

  postgres:
    extends:
      file: docker-compose.common.yml
      service: service
    build: postgres
    volumes:
      - qainstructor-db:/var/lib/postgresql/data

  backup:
    extends:
      file: docker-compose.common.yml
      service: service
    build: backup
    links:
      - postgres

  redis:
    extends:
      file: docker-compose.common.yml
      service: service
    image: redis

  selenium-server:
    extends:
      file: docker-compose.common.yml
      service: service
    image: selenium/standalone-firefox
    links:
      - nginx

  sample-app:
    extends:
      file: docker-compose.common.yml
      service: service
    build: sample-app
    volumes:
      - qainstructor-sample-app-assets:/assets-volume

  nginx:
    extends:
      file: docker-compose.common.yml
      service: service
    build: nginx
    links:
      - rails
      - sample-app
      - faye
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - qainstructor-engine-assets:/app/public
      - qainstructor-sample-app-assets:/sample-app/public

  rails:
    extends:
      file: docker-compose.common.yml
      service: service
    build: rails
    links:
      - postgres
      - redis
    volumes:
      - qainstructor-engine-assets:/assets-volume

  sidekiq:
    extends:
      file: docker-compose.common.yml
      service: service
    build: sidekiq
    links:
      - faye
      - postgres
      - redis
      - selenium-server
    # sidekiq container should be able to start docker containers using host docker.sock file
    # also, it's important that job files inside container should share the host dir, otherwise
    # volumes won't work
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  qainstructor-db:
    external: true
  qainstructor-engine-assets:
    external: true
  qainstructor-sample-app-assets:
    external: true
