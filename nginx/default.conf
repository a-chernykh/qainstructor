upstream faye-app {
  server faye:8080;
}

upstream sample-app {
  server sample-app:8080;
}

upstream rails-app {
  server rails:8080;
}

server {
  listen 80;

  server_name $FAYE_HOST;

  keepalive_timeout 70;

  location / {
    proxy_pass http://faye-app;
    proxy_set_header Host      $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_buffering off;
    proxy_redirect off;
    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;
    break;
  }
}

server {
  listen 80;

  server_name *.$SAMPLE_APP_HOST;

  root /sample-app/public;

  location @app {
    proxy_pass http://sample-app;
    proxy_set_header Host      $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|css|js|html|woff|woff2|ttf)$ {
    expires 1M;
    access_log off;
    try_files $uri @app;
  }

  try_files $uri @app;
}

server {
  listen 80;
  listen 443 ssl;
  server_name www.$ENGINE_HOST;

  ssl_certificate     /etc/nginx/ssl/$ENGINE_HOST.crt;
  ssl_certificate_key /etc/nginx/ssl/$ENGINE_HOST.key;
  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;  # don’t use SSLv3 ref: POODLE

  return 301 $scheme://$ENGINE_HOST$request_uri;
}

server {
  listen 80;
  listen 443 ssl;
  server_name $ENGINE_HOST;

  keepalive_timeout 70;

  ssl_certificate     /etc/nginx/ssl/$ENGINE_HOST.crt;
  ssl_certificate_key /etc/nginx/ssl/$ENGINE_HOST.key;
  ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;  # don’t use SSLv3 ref: POODLE

  # Landing page
  location = / {
    if ($server_port = 80) {
      return 301 https://$host$request_uri;
    }

    root /usr/share/nginx/html;
    try_files $uri /index.html =404;
    break;
  }
  location ~* ^/landing/ {
    root /usr/share/nginx/html;
    expires 1M;
    access_log off;
    try_files $uri =404;
    break;
  }

  # Rails app
  root /app/public;

  location @app {
    proxy_pass http://rails-app;
    proxy_set_header Host      $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|css|js|html|woff|woff2|ttf)$ {
    expires 1M;
    access_log off;
    try_files $uri @app;
  }
  # we only have SSL certificate for qainstructor.com, that's why we want chapters
  # to be served only by HTTP so that browser does not blame missing certificates for sample app hosts
  location ~* ^/courses/(.*)/chapters/(.*)$ {
    if ($server_port = 443) {
      return 301 http://$host$request_uri;
    }
    try_files $uri @app;
  }

  try_files $uri @app;
}
