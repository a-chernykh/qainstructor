.row.exercise
  .col-lg-4
    p You have single page web-application (see right side). Feel free to play around with it to understand how it's working. Click on "Show message"
      button and observe app behavior.

    p You need to add 2 steps to <mark>show_message.feature</mark> file to make test passing. Example of steps which you can add:

    code-example type='cucumber'
      | When I click on "Example button" button
        Then I should see "Example message" message

    p Click on "Verify" button after adding each step to verify if your changes were correct.

    steps files='files'
      step
        p Add a new step to <mark>show_message.feature</mark> to click "Show message" button. See <mark>show_message_steps.rb</mark> to get an idea how it should look like.
        step-hint
          p Add step to the <strong>show_message.feature</strong>:
          code-example type='cucumber'
            | When I click on "Show message" button
        verifier
          | body = @browser.find_element(:tag_name, 'body')
            expect(body.text).to include 'Cucumber is a widely cultivated plant in the gourd family'
      step
        p Add a new step to <mark>show_message.feature</mark> to verify that secret message has been shown.
        step-hint
          p Add step in <strong>show_message.feature</strong> to verify that message <em>Cucumber is a widely cultivated plant in the gourd family</em> is present on the page:
          code-example type='cucumber'
            | Then I should see "Cucumber is a widely cultivated plant in the gourd family" message
        verifier
          | expect(@completed).to eq true

  .col-lg-4
    code-editor files='files'
      file language='gherkin' name='show_message.feature'
        | Feature: Show message

          Scenario: User clicks the button
            Given I am on the front page

      file language='ruby' name='show_message_steps.rb' read-only='true'
        | Given(/^I am on the front page$/) do
            @browser.get('#{sample_app_url('secret')}')
          end

          When(/^I click on "([^"]*)" button$/) do |button_name|
            button = @browser.find_element(:css, "input[value='\#{button_name}']")
            button.click
          end

          Then(/^I should see "([^"]*)" message$/) do |message|
            body = @browser.find_element(:tag_name, 'body')
            expect(body.text).to include(message)
            @completed = true if message == 'Cucumber is a widely cultivated plant in the gourd family'
          end

  .col-lg-4
    browser url='appUrl' src='#{sample_app_url('secret')}'
