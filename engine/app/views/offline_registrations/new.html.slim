- content_for :header do
  a.btn.btn-primary.offline-register href='#register' Register

h1 Web automation training in San Francisco Bay Area

p Instructors lead <strong>Ruby</strong>, <strong>Cucumber</strong> and <strong>Selenium</strong> training with focus on a deep hands-on experience.
  Learn how to build automation framework for testing Web applications including:

.row
  .col-lg-12
    ul
      li <strong>Ruby</strong> basics (modules, classes, variables, hashes, arrays, conditions, loops, regular expressions, YAML files, I/O)
      li How to design test automation framework with <strong>Cucumber</strong> - syntax, structure
      li How to interact with web applications using <strong>Selenium WebDriver</strong>
      li How to verify results using <strong>RSpec</strong> assertion library
      li <strong>RubyMine</strong> IDE (usage, configuration, shortcuts)
      li Version control system - <strong>Git</strong>
      li How to generate test reports
      li Basic <stong>Linux</strong> terminal commands

.row
  .col-lg-12
    p.lead At the end of the course you will be able to build test automation framework and create tests by yourself utilizing latest state of the art libraries and techniques which will make you
      a desirable candidate on a job market.

    h2 Course information

    dl.dl-horizontal
      dt Language
      dd Spoken - Russian, all text materials - English
      dt Duration
      dd 7 weeks (3 hours / per week)
      dt Group size
      dd 15 students
      dt Number of instructors
      dd 2
      dt When
      dd January-March 2017 (Saturdays)
      dt Where
      dd Bay Area (South Bay)
      dt Tuition
      dd $50 / per lesson (3 hours)

    h2 Requirements

    ul
      li Basic computer knowledge (coding skills are not required)
      li Laptop with <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">VirtualBox</a> installed, at least 8Gb RAM + SSD drive preferred (Mac OS, Linux and Windows are supported)
      li Highly desired: familiarity with <a href="http://www.w3schools.com/html/default.asp" target="_blank">HTML</a>

.row
  .col-lg-12
    h2 Instructors

.row
  .col-lg-6
    .row.instructor
      .col-lg-12
        img.photo src=image_url('andrey.jpg') width=200 height=200 align='left'
        h3 Andrey Chernih
        h4 Sr Software Engineer and <a href="/">qainstructor.com</a> founder
        p Andrey has 10 years of experience developing and testing web applications. He is a true believer in test driven development and has an eye on software quality.
          Throughout his carrer he was designing multiple testing frameworks based on Cucumber, Selenium and RSpec and mentored people how to test software more efficiently.
          Andrey is also active open-source community member, he made contributions to many popular open-source projects including Ruby on Rails.
        p.social
          a href='https://www.linkedin.com/in/andreychernih' target='_blank'
            img src=image_url('linkedin.png') width=25 height=25
          a href='https://github.com/andreychernih' target='_blank'
            img src=image_url('github.png') width=30 height=25

  .col-lg-6
    .row.instructor
      .col-lg-12
        img.photo src=image_url('alexey.jpg') width=200 height=200 align='left'
        h3 Alexey Smirnov
        h4 Sr QA Automation Engineer
        p Alexey has extensive experience in building test automation frameworks from scratch for Web and Mobile platforms and applications using such tools like
          Ruby, Cucumber, Selenium, Watir and Appium. He also has a big passion about ensuring software quality by implementing automated testing on all stages of SDLC as early
          as possible. Areas of expertise - enterprise solutions, financial, educational and healthcare services.

        p.social
          a href='https://www.linkedin.com/in/alexsmirnov765/en' target='_blank'
            img src=image_url('linkedin.png') width=25 height=25

.row
  .col-lg-12
    h2 Curriculum
    dl
      dt Day 1
      dd
        p We will cover concepts of automated testing and give you introduction into Ruby. You will complete 2 exercises in class and receive one home work assignment.
        ul
          li Introduction to the course
          li Concepts of automated testings
          li RubyMine IDE basics
          li Ruby installation
          li Running Ruby programs
          li Variables
          li Exercise #1
          li Arrays and Hashes
          li Logical conditions
          li Blocks
          li Loops and iterators
          li Exercise #2

      dt Day 2
      dd
        p Deeper coverage of Ruby. You will learn more advanced concepts like classes, modules and regular expressions. Introduction to Linux terminal commands and version control with Git.
        ul
          li Modules
          li Classes and objects
          li Methods
          li Instance variables
          li Type conversions
          li Regular expressions
          li Working with files (I/O)
          li Exercise #1
          li Linux terminal commands
          li Exercise #2
          li Introducton to Git
          li Creating new account and repository on GitHub.com
          li Installing git
          li Creating new branch
          li Commit and push chages
          li Creating new pull request

      dt Day 3
      dd
        p Everything about Cucumber. Gherkin language, feature files, step definitions.
        ul
          li Introduction to Cucumber
          li About Ruby gems
          li Install Cucumber
          li Create new Cucumber projects in RubyMine
          li Create new Cucumber feature file
          li Run this feature file with Cucumber
          li Create and describe step definitions using RubyMine
          li Ruby exceptions
          li Run this feature file with Cucumber
          li Commit and push the changes
          li Exercise #1
          li Introduction to RSpec
          li How to install RSpec
          li How to use RSpec

      dt Day 4
      dd
        p Intruduction to Selenium WebDriver and how to use it to test websites.
        ul
          li Introduction to Selenium WebDriver
          li Install Selenium WebDriver using gem install
          li Install Cucumber and Selenium using bundler
          li Create new Selenium project in RubyMine
          li Creating and destroying browser instance
          li Installing chromedriver
          li Create new browser window
          li Destroy browser window
          li Before / After in Cucumber
          li Use Before / After to create / destroy browser instance
          li Selectors and XPATH
          li Interacting with elements
          li How to get page content and assert that it includes something
          li Exercise #1
          li Exercise #2

      dt Day 5
      dd
        p Using Selenium WebDriver to test popular websites.
        ul
          li Cucumber tables
          li Multiple exercises
          li How to interact with radiobuttons, dropdowns and checkboxes
          li Multiple exercises
          li Background
          li Exercise

      dt Day 6
      dd
        p Start new automation framework to test Gmail features.
        ul
					li Create new project
					li Create and load YAML configuration
					li Create new Gmail account
					li Feature: Sign in into Gmail
					li Feature: Send and receive e-mail
					li Feature: Read message marks message as read
					li Feature: Reply
					li Feature: Search for matching content in mailbox
					li Feature: Move e-mail to a separate folder
					li Feature: Deletion
					li Feature: Archiving

      dt Day 7
      dd
        p Continue testing Gmail features.
        ul
          li Feature: Change user avatar in settings
          li Feature: Change password
          li Feature: Change signature
          li Feature: Test filters
          li Feature: New draft
          li Feature: Change theme
          li Feature: Advanced search
          li Feature: Add new contact

.row
  .col-lg-12
    a name='register'
    h2 Register

    p Please fill in all the fields below to reserve a seat in this course. Note that in order to maximize learning efficiency, we're keeping group size small (no more than 15 students).

    = form_for(@offline_registration, url: offline_registrations_path) do |f|

      .form-group
        = f.label :name
        = f.text_field :name, class: 'form-control', required: true

      .form-group
        = f.label :phone
        = f.text_field :phone, class: 'form-control', required: true

      .form-group
        = f.label :email
        = f.email_field :email, class: 'form-control', required: true

      .actions
        = f.submit 'Register', class: 'btn btn-primary btn-lg'

    p Should you have any questions, don't hesitate contacting us at <a href="mailto:info@qainstructor.com">info@qainstructor.com</a>.
